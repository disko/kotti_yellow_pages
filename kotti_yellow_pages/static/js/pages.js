// Generated by CoffeeScript 1.6.2
var PagesCtrl;

PagesCtrl = function($scope, $http, $window, $log, map) {
  var createMapElements;

  $scope.$watch('branches', function(branches) {
    $log.info("Initializing branches");
    $window.branches = branches;
    $window.map = $scope.map = map;
    createMapElements();
    return $scope.updateFilter();
  });
  createMapElements = function() {
    var b, branch, c, company, _i, _j, _len, _len1, _ref, _ref1;

    $log.info("createMapElements");
    _ref = $scope.branches;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      branch = _ref[_i];
      _ref1 = branch.companies;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        company = _ref1[_j];
        if (!company.marker && company.location.lat && company.location.lng) {
          company.latlng = new L.LatLng(company.location.lat, company.location.lng);
          company.marker = new L.marker(company.latlng);
        }
      }
      branch.bounds = new L.LatLngBounds((function() {
        var _k, _len2, _ref2, _results;

        _ref2 = branch.companies;
        _results = [];
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          c = _ref2[_k];
          if (c.latlng) {
            _results.push(c.latlng);
          }
        }
        return _results;
      })());
    }
    map.bounds = new L.LatLngBounds((function() {
      var _k, _len2, _ref2, _results;

      _ref2 = $scope.branches;
      _results = [];
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        b = _ref2[_k];
        _results.push(b.bounds);
      }
      return _results;
    })());
    return map.fitBounds(map.bounds);
  };
  return $scope.updateFilter = function() {
    var bounds, branch, company, _i, _j, _len, _len1, _ref, _ref1;

    $log.info("updateFilter");
    bounds = [];
    _ref = $scope.branches;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      branch = _ref[_i];
      if (branch.visible) {
        bounds.push(branch.bounds);
      }
      _ref1 = branch.companies;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        company = _ref1[_j];
        if (company.marker) {
          if (branch.visible && !map.hasLayer(company.marker)) {
            map.addLayer(company.marker);
          }
          if (!branch.visible && map.hasLayer(company.marker)) {
            map.removeLayer(company.marker);
          }
        }
      }
    }
    if (bounds.length > 0) {
      return map.fitBounds(bounds);
    }
  };
};
